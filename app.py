import streamlit as st
from core.strategy import get_ai_analysis
from core.text_generator import generate_ai_summary
from utils.plotting import create_gauge_chart

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(page_title="–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –¢–æ—Ä–≥–æ–≤—ã–π –ò–ò", layout="wide")

# --- –ó–∞–≥–æ–ª–æ–≤–æ–∫ ---
st.title("–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –¢–æ—Ä–≥–æ–≤—ã–π –ò–ò üß†")
st.markdown("–≠—Ç–æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä—ã–Ω–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–π –Ω–∞ –æ–ø—ã—Ç–µ –∏ –∏–Ω—Ç—É–∏—Ü–∏–∏.")

# --- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö ---
with st.sidebar:
    st.header("–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    ticker = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∞–∫—Ç–∏–≤–∞:", "QQQ").upper()
    
    horizon = st.radio(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:",
        ["–î–æ–ª–≥–æ—Å—Ä–æ–∫ (–ù–µ–¥–µ–ª—å–Ω—ã–π)", "–°—Ä–µ–¥–Ω–µ—Å—Ä–æ–∫ (–î–Ω–µ–≤–Ω–æ–π)", "–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ–∫ (4-—á–∞—Å–æ–≤–æ–π)"],
        index=1 # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω —Å—Ä–µ–¥–Ω–µ—Å—Ä–æ–∫
    )

    analyze_button = st.button("üöÄ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å")

# --- –°–ª–æ–≤–∞—Ä—å –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞ ---
horizon_map = {
    "–î–æ–ª–≥–æ—Å—Ä–æ–∫ (–ù–µ–¥–µ–ª—å–Ω—ã–π)": {"timeframe": "1wk", "resample": "M"},
    "–°—Ä–µ–¥–Ω–µ—Å—Ä–æ–∫ (–î–Ω–µ–≤–Ω–æ–π)": {"timeframe": "1d", "resample": "W-MON"},
    "–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ–∫ (4-—á–∞—Å–æ–≤–æ–π)": {"timeframe": "4h", "resample": "D"},
}
selected_timeframe_map = horizon_map[horizon]


# --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ ---
if analyze_button:
    with st.spinner(f"–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é {ticker} –Ω–∞ {horizon.lower()} –≥–æ—Ä–∏–∑–æ–Ω—Ç–µ... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 30 —Å–µ–∫—É–Ω–¥."):
        analysis_result = get_ai_analysis(ticker, selected_timeframe_map)

    st.subheader(f"–ê–Ω–∞–ª–∏–∑ –¥–ª—è {ticker} | –ì–æ—Ä–∏–∑–æ–Ω—Ç: {horizon}")

    col1, col2 = st.columns([1, 2])

    with col1:
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ Gauge Chart
        confidence_text = analysis_result.get("confidence", "–ù–∏–∑–∫–∞—è")
        confidence_map = {"–ù–∏–∑–∫–∞—è": 25, "–°—Ä–µ–¥–Ω—è—è": 50, "–í—ã—Å–æ–∫–∞—è": 85}
        confidence_value = confidence_map.get(confidence_text, 0)
        
        st.plotly_chart(create_gauge_chart(confidence_value, confidence_text), use_container_width=True)

    with col2:
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫–æ–ø–æ–¥–æ–±–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
        summary_text = generate_ai_summary(analysis_result)
        st.info(summary_text)

# --- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é ---
st.markdown("---")
st.write("–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç: –í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –ª—é–±–æ–≥–æ –∞–∫—Ç–∏–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL, BTC-USD, EURUSD=X), –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å'. –ò–ò –ø—Ä–∏–º–µ–Ω–∏—Ç –≤–∞—à—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏ –¥–∞—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é.")
